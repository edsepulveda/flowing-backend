services:
  # app:
  #   container_name: nest-flowing
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     args:
  #       - NODE_ENV=production
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - postgres
  #   environment:
  #     - NODE_ENV=production
  #     - PORT=3000
  #     - LOG_DIR=logs
  #     - DB_HOST=postgres
  #     - DB_PORT=5432
  #     - DB_USERNAME=${DB_USERNAME:-postgres}
  #     - DB_PASSWORD=${DB_PASSWORD:-postgres}
  #     - DB_DATABASE=${DB_DATABASE:-nestjs}
  #     - DB_SSL=false
  #     - DB_MIGRATIONS_RUN=true
  #     - BASE_API_URL=http://localhost:3000
  #   volumes:
  #     - ./logs:/app/logs
  #     - ./.pnpm-store:/app/.pnpm-store
  #   restart: unless-stopped
  #   networks:
  #     - flowing-network
  #   healthcheck:
  #     test: ["CMD", "wget", "-qO-", "http://localhost:3000/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 30s
  
  postgres:
    container_name: flowing-database
    image: postgres:16.8-alpine3.20
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_DATABASE:-nestjs}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - flowing-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  postgres-data:

networks:
  flowing-network:
    driver: bridge